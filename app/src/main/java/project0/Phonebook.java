/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package project0;

import java.util.ArrayList;
import java.util.Scanner;

public class Phonebook {

    public static ArrayList<Person> phonebook = new ArrayList<>();
    public static Scanner input = new Scanner(System.in);
    public static Scanner stringInput = new Scanner(System.in);

    public static void main(String[] args) {

        boolean killswitch = false;
        int choice;

        welcomeMessage();

        while (killswitch == false) {
            listChoices();
            choice = input.nextInt();
            actionOptions(choice, input);

            System.out.println("");

            if (choice == 0)
                killswitch = true;
        }

        input.close();

        System.out.println("Program incompleate");

    }

    public static void welcomeMessage() {

        System.out.println("Welcome to your personal digital Roladex Phonebook");
        System.out.println("");
        System.out.println("");

    }

    public static void listChoices() {

        System.out.println("Here is the list of options you can chose from: ");
        System.out.println("");
        System.out.println("1: add a new entry into the roladex");
        System.out.println("2: remove an entry");
        System.out.println("3: update an entry");
        System.out.println("4: search by first name");
        System.out.println("5: search by last name");
        System.out.println("6: display all contacts");
        System.out.println("0: to end");

    }

    public static void actionOptions(int choice, Scanner input) {

        switch (choice) {
            case 1:
                addEntry();
                break;
            case 2:
                removeEntry();
                //System.out.println("Here will be a method to remove an entry");
                break;
            case 3:
                System.out.println("Here will be a method to update an entry");
                break;
            case 4:
                System.out.println("Here will be a method to search for an entry by first name");
                break;
            case 5:
                System.out.println("Here will be a method to search for an entry by last name");
                break;
            case 6:
                System.out.println("Here will be a method to display contacts");
                break;
            case 0:
                System.out.println("Program terminated");
                break;
            default:
                System.out.println("invalid input, please try again");
        }

    }

    public static void addEntry() {

        String entry;
        String splitName;
        //Scanner stringInput = new Scanner(System.in);

        System.out.println("Please enter the the record you would like to add to the phone book in the follwoing format: ");
		System.out.println("First Name Last Name, Street address, City, State, Zip code, Phone Number:");
        entry = stringInput.nextLine();

        String[] temp = entry.split(", ");

        splitName = temp[0];

        String[] temp2 = splitName.split(" ");

        String midName = null;

        if (temp.length > 2)
            for (int i = 1; i < temp2.length - 1; i++)
                if (midName == null)
                    midName = temp2[i];
                else
                    midName += " " + temp2[i];

        System.out.println(midName);

        Address tempAddress = new Address(temp[1], temp[2], temp[3], temp[4]);
        Person tempPerson = new Person(temp[5], temp2[0], midName, temp2[temp2.length - 1], tempAddress);

        phonebook.add(tempPerson);

        System.out.println("");
        System.out.println("The entry: ");
        System.out.println(phonebook.get(phonebook.size() - 1));
        System.out.println("Has been successfully added to the phone book");

    }

    public static void removeEntry() {

        String lookUp;
        int index = 0;
        //Scanner toRemove = new Scanner(System.in);

        if (phonebook.isEmpty()) {
            System.out.println("No entries to remove. You have removed them all or none are added.");
            System.out.println("Please and an entry before trying to remove one.");
        }
        else {
            System.out.println("Inter the phone number of the entry you wish to remove in the following format:");
            System.out.println("0123456789");

            lookUp = stringInput.nextLine();

            for(Person p : phonebook)
                if (p.getPhoneNumber().equals(lookUp))
                    index = phonebook.indexOf(p);
                    System.out.println(phonebook.get(index) + "Has been removed");

            phonebook.remove(index);
        }


    }

    public Object getGreeting() {
        return null;
    }
}
